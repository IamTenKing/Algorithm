package threesum;import java.util.Arrays;/** * @author: jt * @date: 2018-10-4 */public class ThreeSumBinarySearch implements ThreeSum {    public int count(int[] nums) {        Arrays.sort(nums);        int length = nums.length;        int cnt=0;        for (int i = 0; i < length; i++) {            for (int j = i+1; j < length; j++) {                int target=-nums[i]-nums[j];                int index = binarySearch(nums,target);                if(index>j){                    cnt++;                }            }        }        return cnt;    }    public int binarySearch(int[] nums,int target){        int low =0;        int high=nums.length-1;        while (low<=high){            int mid=(low+high)/2;            int num = nums[mid];            if(target<num){                high=mid-1;            }else if(target>num){                low=mid+1;            }else{                return mid;            }        }        return -1;    }}
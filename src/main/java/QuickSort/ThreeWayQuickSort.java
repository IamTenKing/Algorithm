package QuickSort;/** * @author: jt * @date: 2018-10-10 */import QuickSort.Sort.Sort;import java.util.Arrays;/** * 三向切分 */public class ThreeWayQuickSort<T extends Comparable<T>> extends Sort<T> {    @Override    public void sort(T[] nums) {        sort(nums, 0, nums.length - 1);    }    private void sort(T[] nums, int l, int h) {        if (h <= l) {            return;        }        int lt = l, i = l + 1, gt = h;        T v =nums[l];        while(i<=gt){            int cmp = nums[i].compareTo(v);            if(cmp<0){                swap(nums,lt,i);                lt++;                i++;            }else if(cmp>0){                swap(nums,i,gt);                gt--;            }else{                i++;            }        }        sort(nums,l,lt-1);        sort(nums,gt+1,h);    }}class test{    public static void main(String[] args) {        Integer[] arr={9,8,7,6,5,4,3,2,1};        ThreeWayQuickSort<Integer> comparableQuickSort4 = new ThreeWayQuickSort<Integer>();        comparableQuickSort4.sort(arr);        System.out.println(Arrays.toString(arr));    }}